git clone https://github.com/GoogleCloudPlatform/generative-ai.git
cd generative-ai/gemini/sample-apps/gemini-streamlit-cloudrun
ls -lrt
vi requirements.txt
gsutil cp gs://spls/gsp517/chef.py .
cat chef.py
vi chef.py
cat chef.py
vi chef.py
gcloud storage cp chef.py gs://qwiklabs-gcp-01-48a15309d044-generative-ai/
python3 -m venv gemini-streamlit
source gemini-streamlit/bin/activate
pip install -r requirements.txt
GOOGLE_CLOUD_PROJECT='qwiklabs-gcp-01-48a15309d044'
GOOGLE_CLOUD_REGION='us-east1'
AR_REPO='gemini-repo'
SERVICE_NAME='gemini-streamlit-app' 
gcloud artifacts repositories create "$AR_REPO" --location="$GOOGLE_CLOUD_REGION" --repository-format=Docker
ls -lrt
cat Dockerfile
streamlit run chef.py
python3 chef.py
streamlit run chef.py
vi chef.py
GC_PROJECT='qwiklabs-gcp-01-48a15309d044'
GC_REGION='us-east1'
streamlit run chef.py
streamlit run chef.py --browser.serverAddress=localhost --server.enableCORS=false --server.enableXsrfProtection=false --server.port 8080
ls -lrt
vi Dockerfile
AR_REPO='chef-repo'
SERVICE_NAME=    'chef-streamlit-app'
SERVICE_NAME='chef-streamlit-app'
gcloud artifacts repositories create "$AR_REPO" --location="$GC_REGION" --repository-format=Docker
gcloud builds submit --tag "$GC_REGION-docker.pkg.dev/$GC_PROJECT/$AR_REPO/$SERVICE_NAME"
gcloud run deploy "$SERVICE_NAME"   --port=8080   --image="$GC_REGION-docker.pkg.dev/$GC_PROJECT/$AR_REPO/$SERVICE_NAME"   --allow-unauthenticated   --region=$GC_REGION   --platform=managed    --project=$GC_PROJECT   --set-env-vars=PROJECT=$GC_PROJECT,REGION=$GC_REGION
history